global !p
types = {
	'b': 'bool',
	'c': 'char',
	'i': 'int',
	'll': 'long long',
	's': 'string',
}
endglobal

snippet inc "include" b
#include <${1:iostream}>
endsnippet

snippet "for([^ ]+) " "auto for loop" brA
for (auto& `!p snip.rv = match.group(1)` : ${1:arr}) {
	$0
}
endsnippet

# snippet "for " "for loop" brA
# for (int ${1:i} = ${2:0}; $1 < ${3:sz}; $1++) {
# 	$0
# }
# endsnippet

snippet "vec([bcis]|ll)" "vector" wrA
vector<`!p snip.rv = types[match.group(1)]`>$0
endsnippet

snippet "vec " "general vector" wrA
vector<${1:type}>$0
endsnippet

snippet "(u?)map([bcis]|ll)([bcis]|ll)" "map" wrA
`!p
if (match.group(1) != ""):
	snip.rv = "unordered_"
snip.rv += "map<" + types[match.group(2)] + ", " + types[match.group(3)] + ">"
`$0
endsnippet

snippet "(u?)map " "general map" brA
`!p
if (match.group(1) != ""):
	snip.rv = "unordered_"
`map<${2:type}, ${3:type}>$0
endsnippet

snippet "(u?)set([bcis]|ll)" "set" wrA
`!p
if (match.group(1) != ""):
	snip.rv = "unordered_"
snip.rv += "set<" + types[match.group(2)] + ">"
`$0
endsnippet

snippet "(u?)set " "general set" wrA
`!p
if (match.group(1) != ""):
	snip.rv = "unordered_"
`set<${2:type}>$0
endsnippet

snippet "stk([bcis]|ll)" "stack" wrA
stack<`!p snip.rv = types[match.group(1)]`>$0
endsnippet

snippet "stk " "general stack" wrA
stack<${1:type}>$0
endsnippet

snippet "fn([bcis]|ll) " "function" brA
`!p snip.rv = types[match.group(1)]` ${1:functionName}($2) {
	$0
}
endsnippet

snippet "fn " "general function" brA
${1:int} ${2:main}($3) {
	$0
}
endsnippet

snippet sort "sort function" bA
sort(begin(${1:arr}), end($1));
endsnippet

snippet reverse "reverse function" bA
reverse(begin(${1:arr}), end($1));
endsnippet

snippet class "class creator" b
class ${1:className} {
public:
	$1();
	~$1();
private:
};
endsnippet

snippet setup "setup" bA
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ld = long double;

int main() {
	int num;
	cin >> num;
	$0
}
endsnippet

snippet getline "getline" bA
getline(cin, ${1:arr});
endsnippet
